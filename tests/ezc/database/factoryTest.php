<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-24 at 02:17:18.
 */
class ezcDbFactoryTest extends PHPUnit_Framework_TestCase
{
    protected $default;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        try
        {
            $this->default = ezcDbInstance::get();
        }
        catch ( Exception $e )
        {
            // $this->markTestSkipped();
        }

        if ( ! $this->default ) {
            $this->default = ezcDbFactory::create('mysql://root@localhost/test');
            ezcDbInstance::set( $this->default );
        }
    }

    protected function tearDown()
    {
        ezcDbInstance::reset();
        ezcDbInstance::set( $this->default );
    }

    public function testConstructorNoDatabaseName()
    {
        try
        {
            // we'll create an instance of the correct type simply by making a similar one to the default.
            $db = ezcDbInstance::get();
            $className = get_class( $db );
            $db = new $className( array() );
            $this->fail( "Instantiating a handler with no database name should not be successful" );
        }
        catch ( ezcDbMissingParameterException $e ) {}
    }
    
    /**
     * @covers ezcDbFactory::addImplementation
     * @todo   Implement testAddImplementation().
     */
    public function testAddImplementation()
    {
        ezcDbFactory::addImplementation( 'test', 'ezcDbHandlerTest' );
        $array = ezcDbFactory::getImplementations();
        $this->assertEquals( array( 'mysql', 'pgsql', 'oracle', 'sqlite', 'mssql', 'test' ), $array );
    }

    /**
     * @covers ezcDbFactory::addImplementation
     * @depends testAddImplementation
     */
    public function testGetImplementationsAfterAddingOne()
    {
        ezcDbFactory::addImplementation( 'test', null );
        $array = ezcDbFactory::getImplementations();
        $this->assertEquals( array( 'mysql', 'pgsql', 'oracle', 'sqlite', 'mssql' ), $array );
    }

    /**
     * @covers ezcDbFactory::getImplementations
     */
    public function testGetImplementations()
    {
        $array = ezcDbFactory::getImplementations();
        $this->assertEquals( array( 'mysql', 'pgsql', 'oracle', 'sqlite', 'mssql' ), $array );
    }
    
    /**
     * @covers ezcDbFactory::create
     * @todo   Implement testCreate().
     */
    public function testCreate()
    {
        $db = ezcDbFactory::create('mysql://root@localhost/test');
        $this->assertTrue( $db instanceof ezcDbInterface );
    }

    /**
     * @covers ezcDbFactory::wrapper
     * @todo   Implement testWrapper().
     */
    public function testWrapper()
    {
        $pdo = new PDO('mysql://localhost/test', 'root', '');
        $db = ezcDbFactory::wrapper($pdo);
        $this->assertTrue( $db instanceof ezcDbInterface );
    }
}