<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-24 at 02:50:28.
 */
class ezcDbHandlerTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var ezcDbHandler
     */
    protected $default;

    protected function setUp()
    {
        try
        {
            $this->default = ezcDbInstance::get();
        }
        catch ( Exception $e ) {}

        if ( ! $this->default ) {
            $this->default = ezcDbFactory::create('mysql://root@localhost/test');
            ezcDbInstance::set( $this->default );
        }
    }

    protected function tearDown()
    {
        ezcDbInstance::reset();
        ezcDbInstance::set( $this->default );
    }

    /**
     * @covers ezcDbHandler::getPdo
     * @todo   Implement testGetPdo().
     */
    public function testGetPdo()
    {
        $this->assertInstanceOf('PDO', $this->default->getPdo());
    }

    /**
     * @covers ezcDbHandler::createSelectQuery
     * @todo   Implement testCreateSelectQuery().
     */
    public function testCreateSelectQuery()
    {
        $this->assertInstanceOf('ezcQuerySelect', $this->default->createSelectQuery());
    }

    /**
     * @covers ezcDbHandler::createUpdateQuery
     * @todo   Implement testCreateUpdateQuery().
     */
    public function testCreateUpdateQuery()
    {
        $this->assertInstanceOf('ezcQueryUpdate', $this->default->createUpdateQuery());
    }

    /**
     * @covers ezcDbHandler::createInsertQuery
     * @todo   Implement testCreateInsertQuery().
     */
    public function testCreateInsertQuery()
    {
        $this->assertInstanceOf('ezcQueryInsert', $this->default->createInsertQuery());
    }

    /**
     * @covers ezcDbHandler::createDeleteQuery
     * @todo   Implement testCreateDeleteQuery().
     */
    public function testCreateDeleteQuery()
    {
        $this->assertInstanceOf('ezcQueryDelete', $this->default->createDeleteQuery());
    }

    /**
     * @covers ezcDbHandler::createExpression
     * @todo   Implement testCreateExpression().
     */
    public function testCreateExpression()
    {
        $this->assertInstanceOf('ezcQueryExpression', $this->default->createExpression());
    }

    /**
     * @covers ezcDbHandler::createUtilities
     * @todo   Implement testCreateUtilities().
     */
    public function testCreateUtilities()
    {
        $this->assertInstanceOf('ezcDbUtilities', $this->default->createUtilities());
    }

    /**
     * @covers ezcDbHandler::quoteIdentifier
     * @todo   Implement testQuoteIdentifier().
     */
    public function testQuoteIdentifier()
    {
        $this->assertEquals('`table`', $this->default->quoteIdentifier('table'));
    }
}